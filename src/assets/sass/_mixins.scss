@use 'sass:math';
@use 'vars' as *;

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }
  @return $number;
}

@function sqrt($r) {
  $unitless: strip-unit($r);
  $x0: 1;
  $x1: $x0;
  @for $i from 1 through 10 {
    $x1: $x0 - math.div(($x0 * $x0 - abs($unitless)), (2 * $x0));
    $x0: $x1;
  }
  @return $x1 * math.div($r, $r); // get back to units
}

@mixin grey-outline(){
  @include hairline-border();
  //box-shadow: 0 0 0 $outline-width $outline-color;
}

@mixin centered($x-shift:0, $y-shift:0){
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50% + $x-shift, -50% + $y-shift);
}
@mixin centeredVertical($y-shift:0){
  position: absolute;
  top: 50%;
  transform: translate(0, -50% + $y-shift);
}

@mixin checker-bg ($color:#1a1a1a, $size: math.div($module-size, 4), $url:"/static/img/checker-12-tr@1x.png"){
  background: $color url($url) repeat fixed 0 0;
  background-size: $size;
}
@mixin checker-bg-20 ($color:#1a1a1a, $size: math.div($module-size, 4) ){
  @include checker-bg($color, $size, "/static/img/checker-12-tr20@2x.png");
}
@mixin checker-bg-10 ($color:#1a1a1a, $size: math.div($module-size, 4) ){
  @include checker-bg($color, $size, "/static/img/checker-48-tr10@2x.png");
}
@mixin checker-bg-5 ($color:#1a1a1a, $size: math.div($module-size, 4) ){
  @include checker-bg($color, $size, "/static/img/checker-48-tr5@2x.png");
}

@mixin weider-then-iphon5 (){
  @media (min-width: 340px) {
    @content;
  }
}
@mixin weider-then-phone (){
  @media (min-width: 600px) {
    @content;
  }
}

@mixin input-focused(){
  outline: none;
  box-shadow: 0 0 0 1px #575757;
  z-index: 300;
}

@mixin h-style() {
  font-size: $h1-font-size;
  line-height: $h1-line-height;
}

