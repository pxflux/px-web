@use 'sass:math';
@use 'sass:color';
@use '../vars' as *;
@use '../mixins' as *;
@use 'hairline' as *;

$font-size-source: 110%;
$source-input-height: 1.5 * $module-size;
$channel-padding-small: math.div($module-size, 4);
$channel-padding-normal: math.div($module-size, 2);
$channel-padding-big: $module-size;

@use "work_outputs" as *;

@mixin channel-editor-panel-width(){
  width: calc(100vw - #{$channel-padding-small*2});
  max-width: 9 * $module-size;
  @include weider-then-iphon5{
    width: calc(100vw - #{$channel-padding-normal*2});
  }
  @include weider-then-phone{
    width: calc(100vw - #{$channel-padding-normal*2});
  }
}
.channel-wrapper{
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
  position: relative;
  border-right: 1px dashed $outline-color;

  &:last-child{
    min-width: 100vw;
    //border-right: none;
  }
}
.channel {
  position: relative;
  border-right: 1px dashed color.adjust($bg-secondary-color, $alpha: -0.9);
  padding: $channel-padding-small;

  @include weider-then-iphon5 {
    padding: $channel-padding-small $channel-padding-normal;
  }
  @include weider-then-phone {
    flex-shrink: 0;
    padding: $channel-padding-small $channel-padding-big $channel-padding-big 0;
  }

  section {
    margin: 0;
  }
  canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .field{
    max-width: 100vw;
    @include weider-then-phone{
      max-width: calc(100vw - #{$module-size * 2.5});
    }
  }

  .row {
    background: transparent;
    label{
      position: relative;
    }
    > * {
      background: transparent;
    }
  }
  label[for='sourceUrl'] {
    font-size: $font-size-source;
    @include weider-then-phone {
      height: $source-input-height;
    }
  }

  .outputs-editor-wrapper{
    position: relative;
  }
  .outputs-editor-panel,
  .source-editor-panel{
    position: relative;
    background: transparent;
    max-width: calc(100vw - #{$channel-padding-small*2});
    @include weider-then-iphon5{
      max-width: calc(100vw - #{$channel-padding-normal*2});
    }
    @include weider-then-phone{
      max-width: calc(100vw - #{$channel-padding-big});
    }
  }

  .source-editor-panel {
    @include weider-then-phone {
      display: flex;
      position: relative;
    }
    .source-editor{
      @include channel-editor-panel-width;
    }
    .source-wrapper {
      flex-grow: 1;
      background: transparent;

      input {
        background: #fff;
        @include hairline-border();
        &:focus {
          outline: none;
        }
        &.path {
          font-size: $font-size-source;
          color: $button-text-color;
          width: 100%;
          height: $source-input-height;
        }
      }

      span, input {
        display: block;
        min-height: math.div($module-size, 2);
        padding: math.div($module-size, 4);
      }
    }
    .button {
      padding: 0;
      flex-shrink: 0;
      height: 100%;
    }

  }
  .outputs-editor-panel {
    > .row {
      min-width: 6 * $module-size;
      position: relative;
      top: 0
    }

    .outputs-control-panel {
      display: flex;
      flex-flow: row nowrap;
      position: relative;
      min-height: $module-size;
      @include channel-editor-panel-width;
    }
  }

  .fixed {
    position: fixed;
  }

  .outputs-presentation {
    position: relative;
    min-height: $module-size * 2;

    .output-bar-holder > label {
      display: none;
      @include weider-then-phone {
        display: block;
      }
    }
  }
}
