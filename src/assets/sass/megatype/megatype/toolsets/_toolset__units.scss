// =====================================================
// ------------ MegaType Tools - Units -------------
// =====================================================
// @author Thomas Bredin-Grey <tom@studiothick.com>
// Megatype: https://github.com/StudioThick/megatype
// =====================================================

@use 'sass:math';

// Returns a unitless number
@function no-unit($n) {
    @return math.div($n, ($n * 0 + 1));
}


// Converts an em value to px. Should only work in absolute em document context (root level)
@function em-to-px($value, $context: $current-rootsize) {
    @if math.unit($value) == "em" {
        $value : no-unit($value) * no-unit($current-rootsize);
        $value : $value * 1px;
    }
    @return $value;
}

// Converts an rem value to px. Should only work in absolute em document context (root level)
@function rem-to-px($value, $context: $current-rootsize) {

    @if math.unit($value) == "rem" {
        $value : no-unit($value) * no-unit($current-rootsize);
        $value : $value * 1px;
    }
    @return $value;
}


// Converts a px value to ems. Should only work in absolute em document context (root level), unless $context is specified
@function px-to-em($value, $context: $current-rootsize) {
    @if math.unit($context) == "em" {
        $context: em-to-px($context);
    }
    @if math.unit($value) == "px" {
        $value : math.div(no-unit($value), no-unit($context));
        $value : $value * 1em;
    }
    @return $value;
}


// Converts a px value to rems. Should only work in absolute em document context (root level), unless $context is specified
@function px-to-rem($value, $context: $current-rootsize, $report: false) {
    @if $report == true {
        @debug $value $context;
    }
    @if math.unit($context) == "rem" {
        $context: rem-to-px($context);
    }
    @if math.unit($value) == "px" {
        $value : math.div(no-unit($value), no-unit($context));
        $value : $value * 1rem;
    }
    @return $value;
}

// Converts a em value to rems. Should only work in absolute em document context (root level), unless $context is specified
@function em-to-rem($value) {
    @if math.unit($value) == "em" {
        $value : no-unit($value) * 1rem;
    }
    @return $value;
}

